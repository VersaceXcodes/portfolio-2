>-
openapi: 3.0.0

info:
  title: PortfolioPro API
  version: "1.0.0"
  description: OpenAPI contract for PortfolioPro MVP user-facing data operations (portfolios, projects, media, auth, and public profiles)
servers:
  - url: http://localhost:3000
    description: Local development server
tags:
  - name: Auth
    description: Authentication and session management
  - name: Users
    description: Public user profiles and user-related operations
  - name: Sites
    description: Portfolio sites management (create, update, publish, export)
  - name: Projects
    description: Portfolio projects management
  - name: Assets
    description: Media asset management
  - name: Submissions
    description: Visitor submissions and editor inbox
  - name: Dashboard
    description: Frontend data map related endpoints for the editor dashboard
paths:
  /api/auth/register:
    post:
      summary: Register a new portfolio owner and return JWT token
      operationId: authRegister
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInput'
      responses:
        '200':
          description: Registration successful with auth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthRegisterResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /api/auth/login:
    post:
      summary: Authenticate a user and return auth token
      operationId: authLogin
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Login successful with auth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLoginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /api/auth/logout:
    post:
      summary: Invalidate the current auth token
      operationId: authLogout
      tags:
        - Auth
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /api/users/{user_id}:
    get:
      summary: Public user profile (view host/guest info)
      operationId: getPublicUserProfile
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Public user profile data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicUserProfileResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/sites:
    post:
      summary: Create a new portfolio site for a user
      operationId: createSite
      tags:
        - Sites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSiteInput'
      responses:
        '200':
          description: Site created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      summary: List or search sites for the authenticated user
      operationId: listSites
      tags:
        - Sites
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Sites list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /api/sites/{site_id}:
    get:
      summary: Get a portfolio site by id
      operationId: getSite
      tags:
        - Sites
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Site data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update a portfolio site
      operationId: updateSite
      tags:
        - Sites
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSiteInput'
      responses:
        '200':
          description: Site updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/sites/{site_id}/publish:
    put:
      summary: Publish site to hosting subdomain
      operationId: publishSite
      tags:
        - Sites
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Site published
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/sites/{site_id}/export:
    post:
      summary: Export static site as ZIP (downloadable) or link
      operationId: exportSite
      tags:
        - Sites
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Export ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/sites/{site_id}/hero:
    put:
      summary: Update hero section of a site
      operationId: updateSiteHero
      tags:
        - Sites
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeroUpdateInput'
      responses:
        '200':
          description: Hero updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/sites/{site_id}/about:
    put:
      summary: Update about section of a site
      operationId: updateSiteAbout
      tags:
        - Sites
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AboutUpdateInput'
      responses:
        '200':
          description: About updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/sites/{site_id}/seo:
    put:
      summary: Update SEO metadata for a site
      operationId: updateSiteSeo
      tags:
        - Sites
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeoUpdateInput'
      responses:
        '200':
          description: SEO updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/sites/{site_id}/theme:
    put:
      summary: Update theme and branding for a site
      operationId: updateSiteTheme
      tags:
        - Sites
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeUpdateInput'
      responses:
        '200':
          description: Theme updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/sites/{site_id}/projects:
    get:
      summary: List projects for a site
      operationId: listSiteProjects
      tags:
        - Projects
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Site projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsListResponse'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Create a new project for a site
      operationId: createProject
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectInput'
      responses:
        '200':
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /api/sites/{site_id}/projects/{project_id}:
    put:
      summary: Update a project
      operationId: updateProject
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectInput'
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete a project
      operationId: deleteProject
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/sites/{site_id}/projects/{project_id}/images:
    post:
      summary: Upload an image for a project
      operationId: uploadProjectImage
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssetInput'
      responses:
        '200':
          description: Project image uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /api/sites/{site_id}/assets:
    post:
      summary: Upload a media asset for a site
      operationId: createSiteAsset
      tags:
        - Assets
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssetInput'
      responses:
        '200':
          description: Asset created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /api/sites/{site_id}/assets/{asset_id}:
    put:
      summary: Update a site asset
      operationId: updateSiteAsset
      tags:
        - Assets
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
        - name: asset_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssetInput'
      responses:
        '200':
          description: Asset updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete a site asset
      operationId: deleteSiteAsset
      tags:
        - Assets
      security:
        - BearerAuth: []
      parameters:
        - name: site_id
          in: path
          required: true
          schema:
            type: string
        - name: asset_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Asset deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/contact/submit:
    post:
      summary: Submit a visitor message via the contact form
      operationId: submitContact
      tags:
        - Submissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInput'
      responses:
        '200':
          description: Submission received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactSubmissionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/dashboard/projects:
    get:
      summary: Dashboard: list/search projects for a site with pagination
      operationId: dashboardListProjects
      tags:
        - Dashboard
      parameters:
        - name: site_id
          in: query
          required: true
          schema:
            type: string
        - name: search_query
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Projects payload for dashboard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/dashboard/submissions:
    get:
      summary: Dashboard: list visitor submissions (admin)
      operationId: dashboardListSubmissions
      tags:
        - Dashboard
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Submissions payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionsListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /api/dashboard/preview:
    get:
      summary: Live preview (internal UI route)
      operationId: dashboardLivePreview
      tags:
        - Dashboard
      responses:
        '200':
          description: Preview stream reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewResponse'
  /api/dashboard/export:
    get:
      summary: Dashboard: export available static site (not required for MVP)
      operationId: dashboardExport
      tags:
        - Dashboard
      responses:
        '200':
          description: Export bundle reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
  /api/help/docs:
    get:
      summary: Help and quick start docs
      operationId: getHelpDocs
      tags:
        - Dashboard
      responses:
        '200':
          description: Help content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpDocsResponse'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    # User domain (exactly as defined in Zod)
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        password_hash:
          type: string
        full_name:
          type: string
          nullable: true
        avatar_url:
          type: string
          format: uri
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
      required:
        - id
        - username
        - email
        - password_hash
        - is_active
        - created_at
    CreateUserInput:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password_hash:
          type: string
        full_name:
          type: string
          nullable: true
        avatar_url:
          type: string
          format: uri
          nullable: true
        is_active:
          type: boolean
      required:
        - username
        - email
        - password_hash
    UpdateUserInput:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        password_hash:
          type: string
        full_name:
          type: string
          nullable: true
        avatar_url:
          type: string
          format: uri
          nullable: true
        is_active:
          type: boolean
      required:
        - id
    AuthRegisterResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              type: string
      required:
        - data
    AuthLoginResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              type: string
      required:
        - data
    LogoutResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
    PublicUserProfile:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        full_name:
          type: string
          nullable: true
        avatar_url:
          type: string
          format: uri
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
      required:
        - id
        - username
        - is_active
        - created_at
    PublicUserProfileResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PublicUserProfile'
      required:
        - data
    Site:
      type: object
      properties:
        site_id:
          type: string
        user_id:
          type: string
        site_title:
          type: string
        tagline:
          type: string
          nullable: true
        hero_image_url:
          type: string
          format: uri
          nullable: true
        about_text:
          type: string
          nullable: true
        template_id:
          type: string
          nullable: true
        primary_color:
          type: string
          nullable: true
        font_family:
          type: string
          nullable: true
        is_dark_mode:
          type: boolean
        seo_title:
          type: string
          nullable: true
        seo_description:
          type: string
          nullable: true
        subdomain:
          type: string
          nullable: true
        published_at:
          type: string
          format: date-time
          nullable: true
        export_zip_url:
          type: string
          nullable: true
      required:
        - site_id
        - user_id
        - site_title
        - is_dark_mode
    CreateSiteInput:
      type: object
      properties:
        user_id:
          type: string
        site_title:
          type: string
        tagline:
          type: string
          nullable: true
        hero_image_url:
          type: string
          format: uri
          nullable: true
        about_text:
          type: string
          nullable: true
        template_id:
          type: string
          nullable: true
        primary_color:
          type: string
          nullable: true
        font_family:
          type: string
          nullable: true
        is_dark_mode:
          type: boolean
        seo_title:
          type: string
          nullable: true
        seo_description:
          type: string
          nullable: true
        subdomain:
          type: string
          nullable: true
      required:
        - user_id
        - site_title
        - is_dark_mode
    UpdateSiteInput:
      type: object
      properties:
        site_id:
          type: string
        site_title:
          type: string
        tagline:
          type: string
          nullable: true
        hero_image_url:
          type: string
          format: uri
          nullable: true
        about_text:
          type: string
          nullable: true
        template_id:
          type: string
          nullable: true
        primary_color:
          type: string
          nullable: true
        font_family:
          type: string
          nullable: true
        is_dark_mode:
          type: boolean
        seo_title:
          type: string
          nullable: true
        seo_description:
          type: string
          nullable: true
        subdomain:
          type: string
          nullable: true
      required:
        - site_id
    SiteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Site'
      required:
        - data
    SitesListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Site'
        total:
          type: integer
      required:
        - data
        - total
    HeroUpdateInput:
      type: object
      properties:
        title:
          type: string
        tagline:
          type: string
          nullable: true
        hero_image_url:
          type: string
          format: uri
          nullable: true
      required:
        - title
    AboutUpdateInput:
      type: object
      properties:
        bio:
          type: string
          nullable: true
        avatar_url:
          type: string
          format: uri
          nullable: true
      required: []
    SeoUpdateInput:
      type: object
      properties:
        seo_title:
          type: string
          nullable: true
        seo_description:
          type: string
          nullable: true
      required: []
    ThemeUpdateInput:
      type: object
      properties:
        template_id:
          type: string
          nullable: true
        primary_color:
          type: string
          nullable: true
        font_family:
          type: string
          nullable: true
        is_dark_mode:
          type: boolean
      required:
        - is_dark_mode
    ProjectsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        total:
          type: integer
      required:
        - data
        - total
    Project:
      type: object
      properties:
        project_id:
          type: string
        site_id:
          type: string
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        tags:
          type: array
          items:
            type: string
        demo_url:
          type: string
          nullable: true
          format: uri
        code_url:
          type: string
          nullable: true
          format: uri
        images:
          type: array
          items:
            type: string
            format: uri
        order_index:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - project_id
        - site_id
        - title
        - description
        - date
        - tags
        - order_index
    CreateProjectInput:
      type: object
      properties:
        site_id:
          type: string
        title:
          type: string
        description:
          type: string
        date:
          type: string
        tags:
          type: array
          items:
            type: string
        demo_url:
          type: string
          nullable: true
          format: uri
        code_url:
          type: string
          nullable: true
          format: uri
        images:
          type: array
          items:
            type: string
            format: uri
        order_index:
          type: integer
      required:
        - site_id
        - title
        - description
        - date
        - tags
        - order_index
    UpdateProjectInput:
      type: object
      properties:
        id:
          type: string
        site_id:
          type: string
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        date:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        demo_url:
          type: string
          nullable: true
          format: uri
        code_url:
          type: string
          nullable: true
          format: uri
        images:
          type: array
          items:
            type: string
          nullable: true
        order_index:
          type: integer
          nullable: true
      required:
        - id
    ProjectResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Project'
      required:
        - data
    AssetResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ImageAsset'
      required:
        - data
    AssetsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ImageAsset'
        total:
          type: integer
      required:
        - data
        - total
    ImageAsset:
      type: object
      properties:
        image_id:
          type: string
        site_id:
          type: string
          nullable: true
        project_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        alt_text:
          type: string
          nullable: true
        uploaded_at:
          type: string
          format: date-time
      required:
        - image_id
        - url
    CreateAssetInput:
      type: object
      properties:
        site_id:
          type: string
        project_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        alt_text:
          type: string
          nullable: true
      required:
        - site_id
        - url
    UpdateAssetInput:
      type: object
      properties:
        asset_id:
          type: string
        site_id:
          type: string
          nullable: true
        project_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
        alt_text:
          type: string
          nullable: true
      required:
        - asset_id
    HeroUpdateInput:
      $ref: '#/components/schemas/HeroUpdateInput'
    AboutUpdateInput:
      $ref: '#/components/schemas/AboutUpdateInput'
    PreviewResponse:
      type: object
      properties:
        status:
          type: string
        url:
          type: string
          format: uri
      required:
        - status
        - url
    ExportResponse:
      type: object
      properties:
        export_zip_url:
          type: string
          nullable: true
        export_path:
          type: string
          nullable: true
      required:
        - export_zip_url
    HelpDocsResponse:
      type: object
      properties:
        content:
          type: string
      required:
        - content
    ProjectsListItem:
      type: object
      properties:
        project_id:
          type: string
        title:
          type: string
      required:
        - project_id
        - title
    SubmissionsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ContactSubmission'
        total:
          type: integer
      required:
        - data
        - total
    ContactSubmission:
      type: object
      properties:
        submission_id:
          type: string
        site_id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
        message:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - submission_id
        - email
        - message
        - created_at
    ContactInput:
      type: object
      properties:
        name:
          type: string
          nullable: true
        email:
          type: string
        message:
          type: string
      required:
        - email
        - message
    ContactSubmissionResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ContactSubmission'
      required:
        - data
    ProjectsList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        total:
          type: integer
      required:
        - data
        - total
    PublicProfile:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PublicUserProfile'
    HelpCenter:
      type: object
      properties:
        topics:
          type: array
          items:
            type: string
      required:
        - topics
    # Lightweight placeholders for optional endpoints referenced by the UX map
    ExportedStaticBundle:
      type: object
      properties:
        bundle_url:
          type: string
          format: uri
      required:
        - bundle_url
    # Ancillary: generic response wrappers
    GenericSuccess:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
  responses:
    BadRequest:
      description: Bad request
    Unauthorized:
      description: Unauthorized
    NotFound:
      description: Not Found
